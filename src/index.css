
@tailwind base;
@tailwind components;
@tailwind utilities;

/* AlphaHelix Futuristic Biotech Design System */
@layer base {
  :root {
    /* Dark Futuristic Background System */
    --background: 210 30% 4%;
    --surface: 210 25% 8%;
    --surface-elevated: 210 22% 12%;
    --surface-glass: 210 20% 16%;
    --foreground: 210 15% 98%;
    
    /* Neon Scientific Color Palette - Inspired by protein ribbons */
    --primary: 195 100% 60%;        /* Cyan - molecular blue */
    --primary-foreground: 210 30% 4%;
    --secondary: 165 85% 55%;       /* Green - helix color */
    --secondary-foreground: 210 30% 4%;
    --accent: 300 85% 65%;          /* Pink/Purple - protein terminus */
    --accent-foreground: 210 15% 98%;
    
    /* Neon Glow Colors */
    --neon-cyan: 195 100% 60%;
    --neon-blue: 240 100% 65%;
    --neon-green: 145 85% 55%;
    --neon-pink: 320 85% 65%;
    --neon-purple: 280 85% 65%;
    
    /* Status Colors with Glow */
    --success: 142 85% 55%;         /* Prediction success */
    --warning: 45 100% 60%;         /* Confidence warning */
    --destructive: 0 85% 60%;       /* Error state */
    --destructive-foreground: 210 40% 98%;
    
    /* Glass Morphism Interface */
    --muted: 210 20% 15%;
    --muted-foreground: 210 15% 70%;
    --border: 210 25% 20%;
    --border-glow: 195 100% 60%;
    --input: 210 25% 10%;
    --ring: 195 100% 60%;
    
    /* Card System with Glass Effect */
    --card: 210 25% 8%;
    --card-foreground: 210 15% 98%;
    --popover: 210 25% 8%;
    --popover-foreground: 210 15% 98%;
    
    /* Advanced Gradients */
    --gradient-protein: linear-gradient(135deg, 
      hsl(195 100% 70%), 
      hsl(240 100% 75%), 
      hsl(145 85% 65%), 
      hsl(320 85% 75%), 
      hsl(280 85% 75%)
    );
    --gradient-helix: linear-gradient(90deg, 
      hsl(195 100% 60%), 
      hsl(280 85% 65%)
    );
    --gradient-surface: linear-gradient(135deg, 
      hsl(210 30% 4%) 0%, 
      hsl(210 25% 8%) 50%, 
      hsl(210 20% 12%) 100%
    );
    
    /* Layout */
    --radius: 1rem;
    --container-padding: 2rem;
    
    /* Sidebar (keeping for potential future use) */
    --sidebar-background: 210 30% 4%;
    --sidebar-foreground: 210 15% 98%;
    --sidebar-primary: 195 100% 60%;
    --sidebar-primary-foreground: 210 30% 4%;
    --sidebar-accent: 210 20% 16%;
    --sidebar-accent-foreground: 210 15% 98%;
    --sidebar-border: 210 25% 20%;
    --sidebar-ring: 195 100% 60%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
    background: var(--gradient-surface);
    background-attachment: fixed;
  }

  /* Futuristic Typography */
  .font-mono {
    font-family: 'JetBrains Mono', 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;
  }
}

/* Futuristic Component Styles */
@layer components {
  /* Enhanced Neon Text Effects with Better Readability */
  .text-gradient-protein {
    background: var(--gradient-protein);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    filter: 
      drop-shadow(0 0 30px hsl(var(--neon-cyan) / 0.4))
      drop-shadow(0 0 60px hsl(var(--neon-blue) / 0.2))
      brightness(1.2)
      contrast(1.1);
    text-shadow: 
      0 0 20px hsl(var(--neon-cyan) / 0.3),
      0 0 40px hsl(var(--neon-blue) / 0.2);
  }
  
  .text-neon-glow {
    text-shadow: 
      0 0 10px currentColor, 
      0 0 20px currentColor, 
      0 0 40px currentColor,
      0 2px 4px rgba(0, 0, 0, 0.3);
    filter: brightness(1.1);
  }
  
  /* Glass Morphism Cards */
  .glass-card {
    @apply backdrop-blur-xl border border-border/30;
    background: linear-gradient(135deg, 
      hsl(var(--surface) / 0.8) 0%, 
      hsl(var(--surface-elevated) / 0.6) 100%
    );
    box-shadow: 
      0 8px 32px 0 hsl(var(--background) / 0.3),
      inset 0 1px 0 hsl(var(--foreground) / 0.1);
  }
  
  .glass-panel {
    @apply backdrop-blur-md border border-border/20;
    background: linear-gradient(135deg, 
      hsl(var(--surface-glass) / 0.9) 0%, 
      hsl(var(--surface-elevated) / 0.7) 100%
    );
  }
  
  /* Neon Button Effects */
  .btn-neon {
    @apply relative overflow-hidden;
    background: linear-gradient(135deg, 
      hsl(var(--neon-cyan)) 0%, 
      hsl(var(--neon-blue)) 50%, 
      hsl(var(--neon-purple)) 100%
    );
    box-shadow: 
      0 0 20px hsl(var(--neon-cyan) / 0.3),
      0 4px 15px hsl(var(--background) / 0.3);
    transition: all 0.3s ease;
  }
  
  .btn-neon:hover {
    transform: translateY(-2px);
    box-shadow: 
      0 0 30px hsl(var(--neon-cyan) / 0.5),
      0 8px 25px hsl(var(--background) / 0.4);
  }
  
  .btn-neon::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
      transparent, 
      hsl(var(--foreground) / 0.2), 
      transparent
    );
    transition: left 0.5s;
  }
  
  .btn-neon:hover::before {
    left: 100%;
  }
  
  /* Protein Structure Animations */
  .protein-helix {
    animation: proteinRotate 10s linear infinite;
  }
  
  @keyframes proteinRotate {
    0% { transform: rotateY(0deg) rotateX(10deg); }
    100% { transform: rotateY(360deg) rotateX(10deg); }
  }
  
  .particle-float {
    animation: particleFloat 8s ease-in-out infinite;
  }
  
  @keyframes particleFloat {
    0%, 100% { 
      transform: translateY(0px) translateX(0px) rotate(0deg); 
      opacity: 0.3; 
    }
    33% { 
      transform: translateY(-20px) translateX(10px) rotate(120deg); 
      opacity: 0.7; 
    }
    66% { 
      transform: translateY(10px) translateX(-15px) rotate(240deg); 
      opacity: 0.5; 
    }
  }
  
  /* Interactive Hover Effects */
  .hover-glow {
    transition: all 0.3s ease;
  }
  
  .hover-glow:hover {
    box-shadow: 0 0 20px hsl(var(--neon-cyan) / 0.3);
    border-color: hsl(var(--neon-cyan) / 0.5);
  }
  
  /* Sequence Input Styling */
  .sequence-input {
    @apply font-mono text-sm tracking-wider;
    background: linear-gradient(135deg, 
      hsl(var(--input) / 0.8) 0%, 
      hsl(var(--surface) / 0.6) 100%
    );
    border: 1px solid hsl(var(--border) / 0.3);
    box-shadow: inset 0 2px 4px hsl(var(--background) / 0.3);
  }
  
  .sequence-input:focus {
    border-color: hsl(var(--neon-cyan) / 0.5);
    box-shadow: 
      inset 0 2px 4px hsl(var(--background) / 0.3),
      0 0 0 3px hsl(var(--neon-cyan) / 0.1);
  }
  
  /* Progress Indicators */
  .prediction-progress {
    background: linear-gradient(90deg, 
      hsl(var(--neon-cyan)) 0%, 
      hsl(var(--neon-green)) 50%, 
      hsl(var(--neon-pink)) 100%
    );
  }
}

/* Utility Classes */
@layer utilities {
  .text-neon-cyan {
    color: hsl(var(--neon-cyan));
  }
  
  .text-neon-blue {
    color: hsl(var(--neon-blue));
  }
  
  .text-neon-green {
    color: hsl(var(--neon-green));
  }
  
  .text-neon-pink {
    color: hsl(var(--neon-pink));
  }
  
  .text-neon-purple {
    color: hsl(var(--neon-purple));
  }
  
  .bg-neon-cyan {
    background-color: hsl(var(--neon-cyan));
  }
  
  .bg-neon-blue {
    background-color: hsl(var(--neon-blue));
  }
  
  .bg-neon-green {
    background-color: hsl(var(--neon-green));
  }
  
  .bg-neon-pink {
    background-color: hsl(var(--neon-pink));
  }
  
  .bg-neon-purple {
    background-color: hsl(var(--neon-purple));
  }
}
